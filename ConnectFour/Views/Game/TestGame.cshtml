@using Microsoft.AspNet.Identity
@model ConnectFour.Models.Room

@{
    ViewBag.Title = "TestGame";
    bool isAuthor = Model.AuthorID == User.Identity.GetUserId();
}

<style>
    #nav #title {
        margin-top: 50px;
    }
    #content {
        margin-top: 0;
    }
</style>
<canvas id="gameGrid"></canvas>

@section GameMenu {
    <ul id="gameStatus">
        <li class="info">
            Game Status: <span class="game_status">Waiting for opponent...</span>
        </li>
        <li class="info" style="display: none;">
            Turn: <span class="turn_number"></span>
        </li>
        <li class="info" style="display: none;">
            <span class="current_turn_msg" style="color: #FFFF00;"></span>
        </li>
        <li><a href="@Url.Action("Leave", "Game")" alt="Leave Game" title="Leave Game"><span class="bullet">&nbsp;</span>Leave Game</a></li>
    </ul>
}
@section Scripts {
    <script src="~/Scripts/jquery.signalR-2.2.1.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <script>
        $(function () {
            var $gameStatus = $('#gameStatus');
            var $gameStatusMsg = $gameStatus.find('.game_status');
            var $turnNumber = $gameStatus.find('.turn_number');
            var $currentTurnMsg = $gameStatus.find('.current_turn_msg');
            var currentTurn = 0;
            var activePlayer = null;
            var activePlayerMsgs = {
                0: @isAuthor.ToString().ToLower() ? "It is now your turn." : "It is the opponent's turn.",
                1: @isAuthor.ToString().ToLower() ? "It is the opponent's turn." : "It is now your turn"
            }
        
            var gameHub = $.connection.gameHub;
            // function called by hub when the opponent finishes making a move
            gameHub.client.addMove = function (moveData) {

            };

            // function called by hub when the game status changes, such as when
            // a player wins or loses
            // possible values of newStatus:
            // 0 = game start
            // 1 = loss
            // 2 = victory
            // 3 = opponent left the game
            gameHub.client.updateGameStatus = function (newStatus, data) {
                if (data === undefined) {
                    data = {};
                }

                if (newStatus == 0) {
                    $gameStatusMsg.text('Game in progress.');
                    $turnNumber.text(++currentTurn);
                    activePlayer = data.first_turn;
                    $currentTurnMsg.text(activePlayerMsgs[activePlayer]);

                    $turnNumber.closest('.info').fadeIn(50);
                    $currentTurnMsg.closest('.info').fadeIn(50);
                } else if (newStatus == 1) {

                } else if (newStatus == 2) {

                } else if (newStatus == 3) {

                }
            };

            function joinGame() {
                // join the current room
                return gameHub.server.joinGame(@Model.ID);
            };
            function startGame() {
                var deferred = $.Deferred();
                // if the current player is not the author of the room,
                // this means that the game has two participants and it may start
                @if (!isAuthor)
                {
                    <text>
                        console.log("starting game...");
                        return gameHub.server.startGame(@Model.ID);
                    </text>
                }
                console.log("waiting for opponent...");
                return deferred.resolve();
            }
            $.connection.hub.start().done().then(joinGame).then(startGame).fail(function(error) {
                alert(error);
            });
        });
    </script>
    @Scripts.Render("~/bundles/game")
}